<?php
if (!defined('MALWARECHECK_VERSION')) die('No access');

class Logger {
	protected static $_instance;

	protected $_messages = array();

	public static function instance() {
		if (Logger::$_instance === null) {
			Logger::$_instance = new Logger;
		}
		return Logger::$_instance;
	}

	public static function getSeverityByLevel($level) {
		switch ($level) {
			case LogLevel::EMERGENCY:
				return 0;
			case LogLevel::ALERT:
				return 1;
			case LogLevel::CRITICAL:
				return 2;
			case LogLevel::ERROR:
				return 3;
			case LogLevel::WARNING:
				return 4;
			case LogLevel::NOTICE:
				return 5;
			case LogLevel::INFO:
				return 6;
			case LogLevel::DEBUG:
				return 7;
			default:
				throw new \InvalidArgumentException('Invalid value ' . $level . ' as loglevel');
		}
	}

	public function getMessages() {
		return $this->_messages;
	}

	public function log($message, $severity=LogLevel::INFO) {
		//App::profile($message);
		$this->_messages[] = array(
			'message' => $message,
			'time' => microtime(),
			'severity' => $severity,
		);
	}
}
